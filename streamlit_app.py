import streamlit as st 
import requests
import pandas as pd
import pydeck as pdk
from requests.exceptions import ConnectionError
from collections import namedtuple

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ API
ip_api = "127.0.0.1"
port_api = "500"

# –°–∞–π–¥–±–∞—Ä —Å –≤–≤–æ–¥–æ–º –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
st.sidebar.title("üîß –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–æ–∏—Å–∫–∞")

Row = namedtuple("Row", ["code", "label"])
type = st.sidebar.selectbox(
    "–í—ã–±–µ—Ä–∏—Ç–µ —Å–æ—Ü–∏–∞–ª—å–Ω—ã–π –∫–ª–∞—Å—Å –∫–ª–∏–µ–Ω—Ç–∞:",
    [
        Row(1, "Lower class"),
        Row(2, "Working class"),
        Row(3, "Middle class"),
        Row(4, "Upper middle class"),
        Row(5, "Upper class")
    ],
    format_func=lambda x: x.label
).code

run_button = st.sidebar.button("üîç –ü–æ–¥–æ–±—Ä–∞—Ç—å —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏")

# –û—Å–Ω–æ–≤–Ω–æ–π –∑–∞–≥–æ–ª–æ–≤–æ–∫
st.title("üè† Recommendation System")
st.markdown("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –¥–µ–º–æ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ç–µ–ª—å–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏! –í—ã–±–µ—Ä–∏—Ç–µ –ø–∞—Ä–∞–º–µ—Ç—Ä –≤ —Å–∞–π–¥–±–∞—Ä–µ –∏ –ø–æ–ª—É—á–∏—Ç–µ –ø–æ–¥–±–æ—Ä–∫—É –ø–æ–¥—Ö–æ–¥—è—â–∏—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤.")

# –ï—Å–ª–∏ –Ω–∞–∂–∞–ª–∏ –∫–Ω–æ–ø–∫—É
if run_button:
    data = {
        "type": int(type),
    }

    try:
        response = requests.post(f"http://{ip_api}:{port_api}/predict_model", json=data)

        if response.status_code == 200:
            predictions = response.json()

            if predictions:
                df = pd.DataFrame(predictions)

                # –î–æ–±–∞–≤–∏–º –æ—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω—É—é —Ü–µ–Ω—É –±–µ–∑ –¥—Ä–æ–±–µ–π –∏ —Å –ø—Ä–æ–±–µ–ª–∞–º–∏
                df['formatted_price'] = df['price'].apply(lambda x: format(x, ',.0f').replace(',', ' '))

                st.success(f"üéâ –ù–∞–π–¥–µ–Ω–æ {len(df)} —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π")

                # –¢–æ–ø-3 –ø–µ—Ä–≤—ã—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤
                st.subheader("üè° –¢–æ–ø-3 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è")

                top3 = df.head(3)
                for _, row in top3.iterrows():
                    st.markdown(f"""
                    **üí∞ –¶–µ–Ω–∞:** {row['formatted_price']} ‚ÇΩ  
                    üìê **–ü–ª–æ—â–∞–¥—å:** {row['area']} –º¬≤  
                    üõèÔ∏è **–ö–æ–º–Ω–∞—Ç:** {row['rooms']}  
                    üìç **–ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã:** {row['geo_lat']}, {row['geo_lon']}  
                    --- 
                    """)

                # –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø–æ–ª–Ω–æ–π —Ç–∞–±–ª–∏—Ü—ã
                st.subheader("üìä –í—Å–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏")
                st.dataframe(df)

                # –ö–∞—Ä—Ç–∞ —Å —Ç–æ—á–∫–∞–º–∏ —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ —Ä–∞–∑–º–µ—Ä–∞ —á–µ—Ä–µ–∑ pydeck
                st.subheader("üó∫Ô∏è –ö–∞—Ä—Ç–∞ –æ–±—ä–µ–∫—Ç–æ–≤")

                layer = pdk.Layer(
                    "ScatterplotLayer",
                    data=df,
                    get_position="[geo_lon, geo_lat]",
                    get_color="[255, 255, 0, 255]",  # –Ø—Ä–∫–∏–π –∂—ë–ª—Ç—ã–π, –Ω–µ–ø—Ä–æ–∑—Ä–∞—á–Ω—ã–π
                    get_radius=30,
                    pickable=True
                )

                view_state = pdk.ViewState(
                    latitude=df['geo_lat'].mean(),
                    longitude=df['geo_lon'].mean(),
                    zoom=11,
                    pitch=0
                )

                tooltip = {
                    "html": "<b>ID:</b> {id}<br><b>–¶–µ–Ω–∞:</b> {formatted_price} ‚ÇΩ<br><b>–ü–ª–æ—â–∞–¥—å:</b> {area} –º¬≤",
                    "style": {
                        "backgroundColor": "rgba(50, 50, 50, 0.8)",
                        "color": "white"
                    }
                }

                st.pydeck_chart(pdk.Deck(
                    layers=[layer],
                    initial_view_state=view_state,
                    tooltip=tooltip
                ))

            else:
                st.warning("üòî –ü–æ –∑–∞–¥–∞–Ω–Ω—ã–º –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º –Ω–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.")
        else:
            st.error(f"–û—à–∏–±–∫–∞: {response.status_code}")
    except ConnectionError:
        st.error("üö® –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ —Å–µ—Ä–≤–µ—Ä—É")

# –§—É—Ç–µ—Ä
st.markdown("---")
st.markdown("–†–∞–∑—Ä–∞–±–æ—Ç–∞–Ω–æ üìå [Development team] | ITMO 2025")
